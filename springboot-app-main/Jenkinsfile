
pipeline {
    tools {
        maven 'Maven3'
    }
    environment {
        registry = "009491729705.dkr.ecr.us-east-1.amazonaws.com/eks_ecr"
    }
    agent any
    stages {
        stage('checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/akannan1087/springboot-app']])
            }
        }
        stage('Build JAR') {
            steps {
                sh 'mvn clean install'
            }
        }
        stage('Build docker image') {
            steps {
                script {
                    docker.build registry
                }
            }
        }
        stage('Push Image Into ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 009491729705.dkr.ecr.us-east-1.amazonaws.com"
                    sh "docker push 009491729705.dkr.ecr.us-east-1.amazonaws.com/eks_ecr:latest"
                }
            }
        }
        stage('K8SDeploy') {
            steps {
                script {
                    withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'k8s', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                    sh "kubectl apply -f eks-deploy-k8s.yaml"
                    }
                }
            }
        }
    }
}
